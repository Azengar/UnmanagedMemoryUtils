<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>net7.0</TargetFramework>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>
		<AllowUnsafeBlocks>True</AllowUnsafeBlocks>
		<GeneratePackageOnBuild>True</GeneratePackageOnBuild>
		<Title>UnmanagedMemoryUtils</Title>
		<VersionPrefix>1.0.4</VersionPrefix>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<Description>A .NET collection of utilities for working with unmanaged memory.
Provides faster alternatives to Memory&lt;T&gt; and ReadOnlyMemory&lt;T&gt; in addition to accessing unmanaged string from managed code.
Allows to manipulate array of unmanaged pointers with the UnmanagedArrayPointer&lt;T&gt; struct.</Description>
		<Authors>Azengar</Authors>
		<RepositoryUrl>https://github.com/Azengar/UnmanagedMemoryUtils</RepositoryUrl>
		<RepositoryType>git</RepositoryType>
		<PackageTags>.NET;C#</PackageTags>
		<Copyright>BSD-3-Clause license</Copyright>
		<PackageProjectUrl>https://github.com/Azengar/UnmanagedMemoryUtils</PackageProjectUrl>
		<PackageReleaseNotes>Version 1.0.2

* Changed from `Unsafe.CopyBlock` to `Unsafe.CopyBlockUnaligned`.

Version 1.0.3

* Added Aggressive Inlining for Allocate methods.

Version 1.0.4

* Added the UnmanagedPointerArray&lt;T&gt; struct used to manipulate array of pointers.
* Marked all properties as 'readonly' as they don't modify the state of the structs.
* Use the new 'namespace' syntax for less indentation levels.</PackageReleaseNotes>
	</PropertyGroup>
	<ItemGroup>
		<None Include="..\..\README.md" Pack="true" PackagePath="\" />
	</ItemGroup>
</Project>
